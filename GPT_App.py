import streamlit as st
import openai

# Load OpenAI key from secrets
openai.api_key = st.secrets["OPENAI_API_KEY"]

st.set_page_config(page_title="Hospitality Blog Assistant", layout="wide")

st.title("‚úçÔ∏è Hospitality Blog Assistant")
st.markdown("Ask me to write a blog post ‚Äî I‚Äôll ask a few quick questions to make it perfect.")

# Initialize session state
if "step" not in st.session_state:
    st.session_state.step = 0
    st.session_state.answers = {}

# Questions for the user
questions = [
    {
        "key": "topic",
        "question": "üìç What destination, hotel, or travel experience is the blog post about?",
        "type": "text"
    },
    {
        "key": "purpose",
        "question": "üéØ What is the main purpose of the blog post?",
        "options": ["1Ô∏è‚É£ Attract tourists", "2Ô∏è‚É£ Promote bookings", "3Ô∏è‚É£ Boost SEO", "4Ô∏è‚É£ Educate travelers"]
    },
    {
        "key": "audience",
        "question": "üë• Who is the target audience?",
        "options": ["1Ô∏è‚É£ Families", "2Ô∏è‚É£ Couples", "3Ô∏è‚É£ Solo travelers", "4Ô∏è‚É£ Digital nomads", "5Ô∏è‚É£ Wellness seekers"]
    },
    {
        "key": "tone",
        "question": "üé® What tone and style do you prefer?",
        "options": ["1Ô∏è‚É£ Friendly", "2Ô∏è‚É£ Elegant", "3Ô∏è‚É£ Professional", "4Ô∏è‚É£ Storytelling", "5Ô∏è‚É£ Travel magazine-style"]
    },
    {
        "key": "content",
        "question": "üìö What kind of content should be included?",
        "options": ["1Ô∏è‚É£ Hotel overview", "2Ô∏è‚É£ SPA experience", "3Ô∏è‚É£ Local attractions", "4Ô∏è‚É£ Dining", "5Ô∏è‚É£ Tips & culture"],
        "multi": True
    },
    {
        "key": "usps",
        "question": "‚≠ê Any unique features or USPs to highlight?",
        "options": ["1Ô∏è‚É£ Natural mineral springs", "2Ô∏è‚É£ Sustainability", "3Ô∏è‚É£ Local heritage", "4Ô∏è‚É£ Luxury amenities"],
        "multi": True
    },
    {
        "key": "reference",
        "question": "üîó Do you want me to reference or link to any website or platform?",
        "type": "text"
    },
    {
        "key": "season",
        "question": "üóìÔ∏è Is this blog post seasonal or time-sensitive?",
        "options": ["1Ô∏è‚É£ Spring", "2Ô∏è‚É£ Summer", "3Ô∏è‚É£ Autumn", "4Ô∏è‚É£ Winter", "5Ô∏è‚É£ Year-round"]
    },
    {
        "key": "structure",
        "question": "üìù Preferred word count or structure?",
        "options": ["1Ô∏è‚É£ 800‚Äì1000 words", "2Ô∏è‚É£ Storytelling", "3Ô∏è‚É£ Top-10 list", "4Ô∏è‚É£ Itinerary style"]
    },
    {
        "key": "channel",
        "question": "üì£ Where will this blog post be published or promoted?",
        "options": ["1Ô∏è‚É£ Blog", "2Ô∏è‚É£ Social media", "3Ô∏è‚É£ Newsletter", "4Ô∏è‚É£ Booking site"]
    },
    {
        "key": "notes",
        "question": "üßæ Any extra notes, keywords, or brand guidelines I should follow?",
        "type": "text"
    },
    {
        "key": "language",
        "question": "üåç What is your preferred language for this blog?",
        "options": ["1Ô∏è‚É£ English", "2Ô∏è‚É£ Turkish", "3Ô∏è‚É£ German", "4Ô∏è‚É£ French"]
    }
]

# Ask questions step-by-step
q = questions[st.session_state.step]
st.markdown(f"**{q['question']}**")

if "options" in q:
    selected = st.multiselect("Choose one or more:" if q.get("multi") else "Choose one:", q["options"])
    if st.button("Next"):
        if selected:
            st.session_state.answers[q["key"]] = selected
            st.session_state.step += 1
elif q.get("type") == "text":
    response = st.text_input("Your answer")
    if st.button("Next"):
        if response:
            st.session_state.answers[q["key"]] = response
            st.session_state.step += 1

# Generate blog post after final step
if st.session_state.step >= len(questions):
    with st.spinner("Writing your blog post..."):
        system_prompt = "You are a professional yet engaging travel and hospitality blogger. Format output with clear headings, subheadings, emojis, and add metadata like keywords, summary, and hashtags for social media."
        user_prompt = f"""Create a travel blog post with the following details:

Destination/Experience: {st.session_state.answers['topic']}
Purpose: {st.session_state.answers['purpose']}
Audience: {st.session_state.answers['audience']}
Tone/Style: {st.session_state.answers['tone']}
Content to include: {st.session_state.answers['content']}
Unique Selling Points (USPs): {st.session_state.answers['usps']}
Reference/Link: {st.session_state.answers['reference']}
Season: {st.session_state.answers['season']}
Structure: {st.session_state.answers['structure']}
Channel: {st.session_state.answers['channel']}
Extra notes: {st.session_state.answers['notes']}
Language: {st.session_state.answers['language']}

The blog should be engaging, well-formatted using markdown, and include:
- A compelling title
- A short intro paragraph
- Multiple sections with emojis and informative subheadings
- Meta data block at the end: keywords, summary, hashtags, tweet, LinkedIn snippet
- Word count around 800‚Äì1000
"""

        completion = openai.ChatCompletion.create(
            model="ft:gpt-3.5-turbo-0125:personal:blogger:BKfX4OnW",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_prompt}
            ],
            max_tokens=3000,
            temperature=0.8
        )

        blog = completion.choices[0].message.content
        st.markdown("## üß≥ Your Blog Post")
        st.markdown(blog)

    if st.button("üîÅ Start Over"):
        st.session_state.step = 0
        st.session_state.answers = {}
